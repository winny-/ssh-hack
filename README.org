* A simple [[https://nethackwiki.com/wiki/Dgamelaunch][dgamelaunch]] client

  This is a very simple utility to do away with messing with your ssh
  config & the shell's =DGLAUTH= environment variable. Instead you
  simply declare your accounts in =$HOME/.config/ssh-hack.rktd= invoke
  as =ssh-hack <alias>=, where =<alias>= is either a hostname or an
  alias specified in the configuration file. You can get a list of
  accounts configured with =ssh-hack -l=.

** Install

  [[https://pkgd.racket-lang.org/pkgn/package/ssh-hack][Package on pkgs.racket-lang.org]]

  Only Unix-likes are supported at the moment.

  Install via =raco pkg install ssh-hack= and ensure your user's
  Racket =bin/= directory is in your path.

** =ssh-hack.rktd= format

   This contains a list of dgamelaunch connection configurations.

*** Example

    Note: the list isn't quoted because it is parsed using =(read)=
    which quotes it for you.

    See [[file:example-ssh-hack.rktd][example-ssh-hack.rktd]]

#+BEGIN_SRC racket
  (#s{service
      #s{ssh-server "nethack" "alt.org" 22}
      ("nao" "alt")
      "your-DGL-auth-username"
      "your-DGL-auth-password"}
   #s{service
     #s{ssh-server "ssh-username" "ssh-host" 22}
     ("aliases" "to" "use" "here") ; or #f to only match by ssh-host
     "your-other-DGL-auth-username"
     "your-other-DGL-auth-password"})
#+END_SRC

** Some ideas for improvement

   - Add a layer to automate tedious tasks - such as Elbereth spam, or
     testing if a BoH is cursed.
   - Support Windows.
   - Add documentation to the help message.
   - Add documentation to =docs.racket-lang.org=.
   - Support telnet for Dgamelaunch services that don't support ssh.
